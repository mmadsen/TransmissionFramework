<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2013.  Mark E. Madsen <mark@madsenlab.org>
  ~
  ~ This work is licensed under the terms of the Creative Commons-GNU General Public Llicense 2.0, as "non-commercial/sharealike".  You may use, modify, and distribute this software for non-commercial purposes, and you must distribute any modifications under the same license.
  ~
  ~ For detailed license terms, see:
  ~ http://creativecommons.org/licenses/GPL/2.0/
  -->
<configuration>
    <model>

        <runparameters config-class="org.madsenlab.sim.tf.config.RunParameters">
            <simlength>10000</simlength>
            <mixingtime>1000</mixingtime>
        </runparameters>

        <dynamics type="WRIGHT-FISHER"/>

        <population>
            <agent-class>org.madsenlab.sim.tf.agent.UnstructuredMultidimensionalTraitAgent</agent-class>
            <numagents>2000</numagents>
            <structure>
                <!-- TBD on specifying population spatial structure -->
            </structure>
        </population>

        <rulesets>
            <ruleset id="001" name="MutateOrCopyRandomNeighbor">
                <rule id="001" ruleclass="org.madsenlab.sim.tf.rules.CopyOrMutateDecisionRule"
                      config-class="org.madsenlab.sim.tf.config.InnovationRuleConfiguration"
                      innovation-rate="0.0001"/>
                <rule subrule-of="001" id="002" ruleclass="org.madsenlab.sim.tf.rules.InfiniteAllelesMutationRule"
                      config-class="org.madsenlab.sim.tf.config.InnovationRuleConfiguration"/>
                <rule subrule-of="001" id="003"
                      ruleclass="org.madsenlab.sim.tf.rules.RandomCopyNeighborSingleDimensionRule"
                      config-class="org.madsenlab.sim.tf.config.CopyingRuleConfiguration"
                      ruletype="org.madsenlab.sim.tf.utils.TraitCopyingMode.PREVIOUS"/>
            </ruleset>
        </rulesets>
    </model>

    <!-- Needs thinking about log files and DB logging -->
    <observers>
        <observer config-class="org.madsenlab.sim.tf.config.EwensSampleConfiguration"
                  observer-class="org.madsenlab.sim.tf.observers.EwensSampleFullPopulationObserver"
                  sample-size="100"/>

    </observers>

    <statespace>
        <traitdimension config-class="org.madsenlab.sim.tf.config.TraitDimensionConfiguration" type="Double"
                        name="BladeLength" id="dim001">
            <variationmodel factory="org.madsenlab.sim.tf.traits.InfiniteAllelesUnitIntervalTraitFactory">
                <initial-trait-generator>getGaussianTraitCollection</initial-trait-generator>
                <initial-trait-generator-arglist>
                    <argument name="numAgents" value="10"/>
                    <argument name="mean" value="0.5"/>
                    <argument name="stdev" value="0.2"/>
                </initial-trait-generator-arglist>
            </variationmodel>
        </traitdimension>
        <traitdimension config-class="org.madsenlab.sim.tf.config.TraitDimensionConfiguration" type="Double"
                        name="NotchType" id="dim002">
            <variationmodel factory="org.madsenlab.sim.tf.traits.InfiniteAllelesUnitIntervalTraitFactory">
                <initial-trait-generator>getUniqueUniformTraitCollection</initial-trait-generator>
                <initial-trait-generator-arglist>
                    <argument name="numAgents" value="10"/>
                </initial-trait-generator-arglist>
            </variationmodel>
        </traitdimension>

    </statespace>

    <classifications>
        <classification config-class="org.madsenlab.sim.tf.config.ClassificationSpecification">
            <name>"FineGrainedProjectilePointClasses</name>
            <dimensions>
                <dimension name="BladeLength" maps="dim001" modetype="specified">
                    <modelist>
                        <mode predicate="[0.0,0.1)"/>
                        <mode predicate="[0.1,0.3)"/>
                        <mode predicate="[0.3,0.5)"/>
                        <mode predicate="[0.5,0.7)"/>
                        <mode predicate="[0.7,1.0]"/>
                    </modelist>
                </dimension>
                <dimension name="NotchType" maps="dim002" modetype="random" nummodes="8"/>
            </dimensions>
        </classification>
    </classifications>

</configuration>
